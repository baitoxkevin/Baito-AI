name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        priority: [p0, p1, p2, p3]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Run P0 Tests (Critical)
      if: matrix.priority == 'p0'
      run: |
        npx playwright test tests/e2e/authentication-critical.spec.ts --project=chromium
        npx playwright test tests/e2e/payments-p0.spec.ts --project=chromium
        npx playwright test tests/unit/payment-calculations.spec.ts --project=chromium
      env:
        CI: true

    - name: Run P1 Tests (High Priority)
      if: matrix.priority == 'p1'
      run: |
        npx playwright test tests/e2e/calendar-p1.spec.ts --project=chromium
        npx playwright test tests/e2e/staff-candidate-p1.spec.ts --project=chromium
        npx playwright test tests/e2e/expense-claims-p1.spec.ts --project=chromium
      env:
        CI: true

    - name: Run P2 Tests (Medium Priority)
      if: matrix.priority == 'p2'
      run: npx playwright test tests/e2e/*-p2.spec.ts --project=chromium
      env:
        CI: true

    - name: Run P3 Tests (Low Priority)
      if: matrix.priority == 'p3'
      run: npx playwright test tests/e2e/*-p3.spec.ts --project=chromium
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ matrix.priority }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30

    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.priority }}
        path: test-results/html/
        retention-days: 30

  report:
    name: Generate Test Report
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results

    - name: Generate summary
      run: |
        echo "# Test Results Summary ðŸŽ¯" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Execution Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -d "test-results/playwright-results-p0" ]; then
          echo "âœ… P0 (Critical) - Completed" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "test-results/playwright-results-p1" ]; then
          echo "âœ… P1 (High Priority) - Completed" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "test-results/playwright-results-p2" ]; then
          echo "âœ… P2 (Medium Priority) - Completed" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "test-results/playwright-results-p3" ]; then
          echo "âœ… P3 (Low Priority) - Completed" >> $GITHUB_STEP_SUMMARY
        fi

  # Visual regression tests (separate job)
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Run visual regression tests
      run: npx playwright test --grep @visual --project=chromium || true
      env:
        CI: true

    - name: Upload visual diffs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-regression-diffs
        path: test-results/visual-diffs/
        retention-days: 30

  # Accessibility tests
  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Run accessibility tests
      run: npx playwright test tests/accessibility --project=chromium || true
      env:
        CI: true

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-results
        path: test-results/
        retention-days: 30

  # Mobile/Responsive tests
  mobile:
    name: Mobile & Responsive Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Run mobile tests
      run: npx playwright test tests/mobile --project=chromium
      env:
        CI: true

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-results
        path: test-results/
        retention-days: 30

  # Cross-browser tests
  cross-browser:
    name: Cross-Browser Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      fail-fast: false
      matrix:
        browser: [firefox, webkit]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Run tests on ${{ matrix.browser }}
      run: npx playwright test tests/e2e/authentication-critical.spec.ts --project=${{ matrix.browser }} || true
      env:
        CI: true

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cross-browser-${{ matrix.browser }}-results
        path: test-results/
        retention-days: 30

  # Performance tests
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Run performance tests
      run: npx playwright test tests/performance --project=chromium || true
      env:
        CI: true

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: test-results/
        retention-days: 30

  # Security tests
  security:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps chromium

    - name: Run security tests
      run: npx playwright test tests/security --project=chromium || true
      env:
        CI: true

    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-results
        path: test-results/
        retention-days: 30
